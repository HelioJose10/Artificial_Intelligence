version: '3.9'
services:
  web:
    image: nginx:latest
    ports: 
      - '8080:80'
    volumes:
      - ./docker-contextNginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./web/html:/var/www/html
    working_dir: /var/www/html
    healthcheck:
      test: curl --fail localhost/ping
      interval: 30s
      retries: 6
  db_admin:
    image: phpmyadmin/phpmyadmin:5
    ports:
      - '8081:80'
    environment:
      - PMA_HOST=projsistemas-databaseA-1
      - PMA_ABSOLUTE_URI=http://localhost:8001/
      - UPLOAD_LIMIT=100M
    volumes:
      - db_admin_data:/var/www/html
      - ./docker-contextNginx/uploads.ini:/usr/local/etc/php/php.ini
      - ./docker-contextNginx/php.ini-development:/usr/local/etc/php/php.ini-development
      - ./docker-contextNginx/php.ini-production:/usr/local/etc/php/php.ini-production
      - ./docker-contextNginx/phpmyadmin-misc.ini:/usr/local/etc/php/conf.d/phpmyadmin-misc.ini
      - ./docker-contextNginx/opache-recommended.ini:/usr/local/etc/php/conf.d/opache-recommended.ini


  appmain:
    build:
      context: .
      dockerfile: php-fmp-msql/dockerfile  
    volumes:
      - ./docker-contextNginx/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - ./web/html:/var/www/html
    healthcheck:
      test: php-fpm -t
      interval: 60s
      retries: 5

  appbackup:
    build:
      context: .
      dockerfile: php-fmp-msql/dockerfile  
    volumes:
      - ./docker-contextNginx/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - ./web/html:/var/www/html
    healthcheck:
      test: php-fpm -t
      interval: 60s
      retries: 5    
  databaseA:
    image: mysql 
    build:
      dockerfile: docker-contextA/dockerfile.a
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: filesA
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - '3306:3306'
    volumes:
      - dataA:/var/lib/mysql
      - ./createsA.sql:/docker-entrypoint-initdb.d/createsA.sql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=password
      interval: 5s
      retries: 5
  databaseB:
    image: mysql:latest 
    build:
      dockerfile: docker-contextB/dockerfile.b
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: filesA
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3308:3306" 
    volumes:
      - dataB:/var/lib/mysql

volumes:
  dataA:
    external: true
  dataB:
    external: true
  db_admin_data:
      