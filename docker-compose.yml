version: '3.9'
services:
  web:
    image: nginx:latest
    ports: 
      - '8080:80'
    volumes:
      - ./docker-contextNginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./web/html:/var/www/html
    working_dir: /var/www/html
    networks:
      - app-network
    healthcheck:
      test: curl --fail localhost/ping
      interval: 30s
      retries: 6
    depends_on:
      app:
        condition: service_healthy
  db_admin:
    image: phpmyadmin/phpmyadmin:5
    ports:
      - '8081:80'
    environment:
      - PMA_HOST=databaseA
      - PMA_ABSOLUTE_URI=http://localhost:8001/
    volumes:
      - db_admin_data:/var/www/html
  app:
    build:
      context: .
      dockerfile: ./docker-contextNginx/dockerfile.php  
    volumes:
      - ./docker-contextNginx/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - ./web/html:/var/www/html
    healthcheck:
      test: php-fpm -t
      interval: 60s
      retries: 5
  databaseA:
    image: mysql 
    networks:
      - app-network
    build:
      dockerfile: docker-contextA/dockerfile.a
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: filesA
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - '3309:3306'
    expose:
      - 3306
    volumes:
      - dataA:/var/lib/mysql
      - ./createsA.sql:/docker-entrypoint-initdb.d/createsA.sql
  databaseB:
    image: mysql:latest 
    networks:
      - app-network
    build:
      dockerfile: docker-contextB/dockerfile.b
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: filesA
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3308:3306" 
    volumes:
      - dataB:/var/lib/mysql

volumes:
  dataA:
    external: true
  dataB:
    external: true
  db_admin_data:

networks:
  app-network:
    driver: bridge
      

      